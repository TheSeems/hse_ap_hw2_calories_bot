from textwrap import dedent

from dependency_injector.wiring import inject, Provide
from telegram import Update
from telegram.ext import ContextTypes, CommandHandler

from calories_bot.config.dependencies import Dependencies
from calories_bot.storage.profile import ProfileStorage


@inject
async def check_progress(
        update: Update,
        context: ContextTypes.DEFAULT_TYPE,
        profile_storage: ProfileStorage = Provide[Dependencies.profile_storage],
):
    if not update.message:
        return
    profile = await profile_storage.get_active_profile(update.message.from_user.id)
    if profile is None:
        await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å: /set_profile")
        return
    await update.message.reply_text(dedent(f"""
        üìä –ü—Ä–æ–≥—Ä–µ—Å—Å:
        –í–æ–¥–∞:
        - –í—ã–ø–∏—Ç–æ: {round(profile.logged_water)} –º–ª –∏–∑ {round(profile.water_goal)} –º–ª.
        - –û—Å—Ç–∞–ª–æ—Å—å: {round(profile.water_goal) - round(profile.logged_water)} –º–ª.
        
        –ö–∞–ª–æ—Ä–∏–∏:
        - –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–æ: {round(profile.logged_calories)} –∫–∫–∞–ª –∏–∑ {round(profile.calorie_goal)} –∫–∫–∞–ª.
        - –°–æ–∂–∂–µ–Ω–æ: {round(profile.burned_calories)} –∫–∫–∞–ª.
        - –ë–∞–ª–∞–Ω—Å: {round(profile.logged_calories) - round(profile.burned_calories)} –∫–∫–∞–ª.
        """))


handler = CommandHandler("check_progress", check_progress)
